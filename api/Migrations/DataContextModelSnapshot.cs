// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_razreda");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("className")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("razred");

                    b.HasKey("Id");

                    b.ToTable("Razred");
                });

            modelBuilder.Entity("api.Models.Commission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_komisije");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("firstMemberId")
                        .HasColumnType("int")
                        .HasColumnName("id_prvog_clana");

                    b.Property<int>("mentorId")
                        .HasColumnType("int")
                        .HasColumnName("id_mentora");

                    b.Property<int>("presidentId")
                        .HasColumnType("int")
                        .HasColumnName("id_predsendnika");

                    b.Property<int>("secondMemberId")
                        .HasColumnType("int")
                        .HasColumnName("id_drugog_clana");

                    b.HasKey("Id");

                    b.ToTable("Komisija");
                });

            modelBuilder.Entity("api.Models.DefenseGraduationPaper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_odbrana_maturskog_rada");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("opis");

                    b.Property<int>("classRoomId")
                        .HasColumnType("int")
                        .HasColumnName("id_ucionice");

                    b.Property<int>("commissionId")
                        .HasColumnType("int")
                        .HasColumnName("id_komisije");

                    b.Property<DateTime?>("dateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("datum_i_vreme");

                    b.Property<string>("topicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("id_teme");

                    b.HasKey("Id");

                    b.ToTable("Odbrana_maturskog_rada");
                });

            modelBuilder.Entity("api.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_odeljenja");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("naziv");

                    b.Property<int>("classTeacher")
                        .HasColumnType("int")
                        .HasColumnName("id_razredni_staresina");

                    b.HasKey("Id");

                    b.ToTable("Odeljenje");
                });

            modelBuilder.Entity("api.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_ispita");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("naziv_ispita");

                    b.Property<int?>("classId")
                        .HasColumnType("int")
                        .HasColumnName("id_ucionice");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("datum_i_vreme");

                    b.Property<int?>("subjectId")
                        .HasColumnType("int")
                        .HasColumnName("id_predmeta");

                    b.HasKey("Id");

                    b.ToTable("Ispit");
                });

            modelBuilder.Entity("api.Models.ProfessorSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_profesor_predmet");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("subjectId")
                        .HasColumnType("int")
                        .HasColumnName("id_predmeta");

                    b.Property<int>("userId")
                        .HasColumnType("int")
                        .HasColumnName("id_korisnika");

                    b.HasKey("Id");

                    b.ToTable("Profesor_predmet");
                });

            modelBuilder.Entity("api.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2")
                        .HasColumnName("expiration");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("token");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<bool>("isRevoked")
                        .HasColumnType("bit")
                        .HasColumnName("isRevoked");

                    b.HasKey("Id");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("api.Models.SelectionGraduationPaper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_izbor_maturskog_rada");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("approvalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("datum_odobrenja");

                    b.Property<string>("filePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("putanja_do_fajla");

                    b.Property<DateTime?>("submissionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("datum_predaje");

                    b.Property<string>("topicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("id_teme");

                    b.HasKey("Id");

                    b.ToTable("Izbor_maturskog_rada");
                });

            modelBuilder.Entity("api.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_ucenik");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<int>("classId")
                        .HasColumnType("int")
                        .HasColumnName("id_razred");

                    b.Property<int>("departmentId")
                        .HasColumnType("int")
                        .HasColumnName("id_odeljenja");

                    b.Property<int?>("gradeGraduation")
                        .HasColumnType("int")
                        .HasColumnName("ocena_maturski");

                    b.Property<int?>("gradeMandatory")
                        .HasColumnType("int")
                        .HasColumnName("ocena_obavezni");

                    b.Property<int?>("gradeOptional")
                        .HasColumnType("int")
                        .HasColumnName("ocena_izborni");

                    b.Property<int>("userId")
                        .HasColumnType("int")
                        .HasColumnName("id_korisnik");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("Ucenik");
                });

            modelBuilder.Entity("api.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_predmeta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("id_razreda");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("naziv");

                    b.HasKey("Id");

                    b.ToTable("Predmet");
                });

            modelBuilder.Entity("api.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_teme");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("opis");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("naziv");

                    b.Property<int>("professorId")
                        .HasColumnType("int")
                        .HasColumnName("id_profesora");

                    b.Property<int?>("studentId")
                        .HasColumnType("int")
                        .HasColumnName("id_ucenika");

                    b.Property<int>("subjectId")
                        .HasColumnType("int")
                        .HasColumnName("id_predmeta");

                    b.HasKey("Id");

                    b.HasIndex("professorId");

                    b.HasIndex("studentId");

                    b.HasIndex("subjectId");

                    b.ToTable("Tema");
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_korisnika");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("i_mejl");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lozinka");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("vreme_kreiranja");

                    b.Property<DateTime>("editedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("vreme_izmene");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ime");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prezime");

                    b.Property<int>("roleStatus")
                        .HasColumnType("int")
                        .HasColumnName("uloga");

                    b.HasKey("Id");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("api.Models.Student", b =>
                {
                    b.HasOne("api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Models.Topic", b =>
                {
                    b.HasOne("api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("professorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("studentId");

                    b.HasOne("api.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("subjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
